--!strict
-- this script was generated by nightcycle/midas-clt, do not manually edit

-- Packages
local Midas = require(game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Midas"))

-- Types
export type TrackerAccessNode<T> = (player: Player, solver: () -> T) -> nil
export type TimerLevel1Type = "Available" | "Locked" | "Reloading"
export type TimerLevel2Type = "Available" | "Locked" | "Reloading"
export type TimerLevel3Type = "Available" | "Locked" | "Reloading"
export type TimerLevel4Type = "Available" | "Locked" | "Reloading"
export type TimerLevel5Type = "Available" | "Locked" | "Reloading"
export type TimerLevel6Type = "Available" | "Locked" | "Reloading"
export type TimerLevel7Type = "Available" | "Locked" | "Reloading"
export type TimerLevel8Type = "Available" | "Locked" | "Reloading"
export type TimerLevel9Type = "Available" | "Locked" | "Reloading"
export type TimerLevel10Type = "Available" | "Locked" | "Reloading"
export type TimerLevel11Type = "Available" | "Locked" | "Reloading"
export type TimerLevel12Type = "Available" | "Locked" | "Reloading"
export type TycoonWrapperPetBalanceIdType = "None" | "Cat_Silver_1" | "Cat_Gold_1" | "Cat_Diamond_1" | "Cat_Normal_1" | "Dog_Silver_1" | "Dog_Gold_1" | "Dog_Diamond_1" | "Dog_Normal_1" | "Mouse_Silver_1" | "Mouse_Gold_1" | "Mouse_Diamond_1" | "Mouse_Normal_1" | "Bird_Silver_1" | "Bird_Gold_1" | "Bird_Diamond_1" | "Bird_Normal_1" | "Cat_Silver_2" | "Cat_Gold_2" | "Cat_Diamond_2" | "Cat_Normal_2" | "Dog_Silver_2" | "Dog_Gold_2" | "Dog_Diamond_2" | "Dog_Normal_2" | "Mouse_Silver_2" | "Mouse_Gold_2" | "Mouse_Diamond_2" | "Mouse_Normal_2" | "Bird_Silver_2" | "Bird_Gold_2" | "Bird_Diamond_2" | "Bird_Normal_2" | "Cat_Silver_3" | "Cat_Gold_3" | "Cat_Diamond_3" | "Cat_Normal_3" | "Dog_Silver_3" | "Dog_Gold_3" | "Dog_Diamond_3" | "Dog_Normal_3" | "Mouse_Silver_3" | "Mouse_Gold_3" | "Mouse_Diamond_3" | "Mouse_Normal_3" | "Bird_Silver_3" | "Bird_Gold_3" | "Bird_Diamond_3" | "Bird_Normal_3" | "Cat_Silver_4" | "Cat_Gold_4" | "Cat_Diamond_4" | "Cat_Normal_4" | "Dog_Silver_4" | "Dog_Gold_4" | "Dog_Diamond_4" | "Dog_Normal_4" | "Mouse_Silver_4" | "Mouse_Gold_4" | "Mouse_Diamond_4" | "Mouse_Normal_4" | "Bird_Silver_4" | "Bird_Gold_4" | "Bird_Diamond_4" | "Bird_Normal_4" | "Cat_Silver_5" | "Cat_Gold_5" | "Cat_Diamond_5" | "Cat_Normal_5" | "Dog_Silver_5" | "Dog_Gold_5" | "Dog_Diamond_5" | "Dog_Normal_5" | "Mouse_Silver_5" | "Mouse_Gold_5" | "Mouse_Diamond_5" | "Mouse_Normal_5" | "Bird_Silver_5" | "Bird_Gold_5" | "Bird_Diamond_5" | "Bird_Normal_5"
export type TycoonKneaderPetBalanceIdType = "None" | "Cat_Silver_1" | "Cat_Gold_1" | "Cat_Diamond_1" | "Cat_Normal_1" | "Dog_Silver_1" | "Dog_Gold_1" | "Dog_Diamond_1" | "Dog_Normal_1" | "Mouse_Silver_1" | "Mouse_Gold_1" | "Mouse_Diamond_1" | "Mouse_Normal_1" | "Bird_Silver_1" | "Bird_Gold_1" | "Bird_Diamond_1" | "Bird_Normal_1" | "Cat_Silver_2" | "Cat_Gold_2" | "Cat_Diamond_2" | "Cat_Normal_2" | "Dog_Silver_2" | "Dog_Gold_2" | "Dog_Diamond_2" | "Dog_Normal_2" | "Mouse_Silver_2" | "Mouse_Gold_2" | "Mouse_Diamond_2" | "Mouse_Normal_2" | "Bird_Silver_2" | "Bird_Gold_2" | "Bird_Diamond_2" | "Bird_Normal_2" | "Cat_Silver_3" | "Cat_Gold_3" | "Cat_Diamond_3" | "Cat_Normal_3" | "Dog_Silver_3" | "Dog_Gold_3" | "Dog_Diamond_3" | "Dog_Normal_3" | "Mouse_Silver_3" | "Mouse_Gold_3" | "Mouse_Diamond_3" | "Mouse_Normal_3" | "Bird_Silver_3" | "Bird_Gold_3" | "Bird_Diamond_3" | "Bird_Normal_3" | "Cat_Silver_4" | "Cat_Gold_4" | "Cat_Diamond_4" | "Cat_Normal_4" | "Dog_Silver_4" | "Dog_Gold_4" | "Dog_Diamond_4" | "Dog_Normal_4" | "Mouse_Silver_4" | "Mouse_Gold_4" | "Mouse_Diamond_4" | "Mouse_Normal_4" | "Bird_Silver_4" | "Bird_Gold_4" | "Bird_Diamond_4" | "Bird_Normal_4" | "Cat_Silver_5" | "Cat_Gold_5" | "Cat_Diamond_5" | "Cat_Normal_5" | "Dog_Silver_5" | "Dog_Gold_5" | "Dog_Diamond_5" | "Dog_Normal_5" | "Mouse_Silver_5" | "Mouse_Gold_5" | "Mouse_Diamond_5" | "Mouse_Normal_5" | "Bird_Silver_5" | "Bird_Gold_5" | "Bird_Diamond_5" | "Bird_Normal_5"
export type TycoonOvenPetBalanceIdType = "None" | "Cat_Silver_1" | "Cat_Gold_1" | "Cat_Diamond_1" | "Cat_Normal_1" | "Dog_Silver_1" | "Dog_Gold_1" | "Dog_Diamond_1" | "Dog_Normal_1" | "Mouse_Silver_1" | "Mouse_Gold_1" | "Mouse_Diamond_1" | "Mouse_Normal_1" | "Bird_Silver_1" | "Bird_Gold_1" | "Bird_Diamond_1" | "Bird_Normal_1" | "Cat_Silver_2" | "Cat_Gold_2" | "Cat_Diamond_2" | "Cat_Normal_2" | "Dog_Silver_2" | "Dog_Gold_2" | "Dog_Diamond_2" | "Dog_Normal_2" | "Mouse_Silver_2" | "Mouse_Gold_2" | "Mouse_Diamond_2" | "Mouse_Normal_2" | "Bird_Silver_2" | "Bird_Gold_2" | "Bird_Diamond_2" | "Bird_Normal_2" | "Cat_Silver_3" | "Cat_Gold_3" | "Cat_Diamond_3" | "Cat_Normal_3" | "Dog_Silver_3" | "Dog_Gold_3" | "Dog_Diamond_3" | "Dog_Normal_3" | "Mouse_Silver_3" | "Mouse_Gold_3" | "Mouse_Diamond_3" | "Mouse_Normal_3" | "Bird_Silver_3" | "Bird_Gold_3" | "Bird_Diamond_3" | "Bird_Normal_3" | "Cat_Silver_4" | "Cat_Gold_4" | "Cat_Diamond_4" | "Cat_Normal_4" | "Dog_Silver_4" | "Dog_Gold_4" | "Dog_Diamond_4" | "Dog_Normal_4" | "Mouse_Silver_4" | "Mouse_Gold_4" | "Mouse_Diamond_4" | "Mouse_Normal_4" | "Bird_Silver_4" | "Bird_Gold_4" | "Bird_Diamond_4" | "Bird_Normal_4" | "Cat_Silver_5" | "Cat_Gold_5" | "Cat_Diamond_5" | "Cat_Normal_5" | "Dog_Silver_5" | "Dog_Gold_5" | "Dog_Diamond_5" | "Dog_Normal_5" | "Mouse_Silver_5" | "Mouse_Gold_5" | "Mouse_Diamond_5" | "Mouse_Normal_5" | "Bird_Silver_5" | "Bird_Gold_5" | "Bird_Diamond_5" | "Bird_Normal_5"
export type MarketPurchaseProductNameType = "Donate5" | "Donate10" | "Donate25" | "Donate50" | "Donate100" | "Donate200" | "Donate500" | "DoubleBread2" | "DoubleBread5" | "DoubleBread10" | "DoubleBread15" | "DoubleBread30" | "DoubleBread60" | "ServerDoubleBread2" | "ServerDoubleBread5" | "ServerDoubleBread10" | "ServerDoubleBread15" | "ServerDoubleBread30" | "ServerDoubleBread60" | "Cash5k" | "Cash10k" | "Cash50k" | "Cash100k" | "Cash250k" | "Cash500k"
export type MarketPurchaseGamepassNameType = "DoubleBreadValue" | "SuperKneader" | "SuperOven" | "SuperWrapper" | "InfiniteTray"
export type DemographicsPlatformScreenRatioType = "16:10" | "16:9" | "5:4" | "5:3" | "3:2" | "4:3" | "9:16" | "uncommon"

-- Class
function constructTracker<T>(path: string, decimalCount: number?): TrackerAccessNode<T>
	return function(player: Player, solver: () -> T)
			local keys: {[number]: string} = path:split("/")
			local propertyName = keys[#keys]
			table.remove(keys, #keys)
			local basePath = table.concat(keys, "/")
			local tracker = Midas:GetTracker(player, basePath)
			tracker:SetState(propertyName, solver)
			if decimalCount then
				tracker:SetRoundingPrecision(decimalCount)
			end
			return nil
	end
end

return {
	["Duration"] = constructTracker("Duration", 0) :: TrackerAccessNode<number>,
	["IsStudio"] = constructTracker("IsStudio", nil) :: TrackerAccessNode<boolean>,
	["Cash"] = constructTracker("Cash", 0) :: TrackerAccessNode<number>,
	["DayReward"] = constructTracker("DayReward", 0) :: TrackerAccessNode<number>,
	["Id"] = {
		["Place"] = constructTracker("Id/Place", nil) :: TrackerAccessNode<string>,
		["Session"] = constructTracker("Id/Session", nil) :: TrackerAccessNode<string>,
		["User"] = constructTracker("Id/User", nil) :: TrackerAccessNode<string>,
	},
	["Index"] = {
		["Event"] = constructTracker("Index/Event", 0) :: TrackerAccessNode<number>,
		["Total"] = constructTracker("Index/Total", 0) :: TrackerAccessNode<number>,
	},
	["Version"] = {
		["Build"] = constructTracker("Version/Build", 0) :: TrackerAccessNode<number>,
		["Major"] = constructTracker("Version/Major", 0) :: TrackerAccessNode<number>,
		["Minor"] = constructTracker("Version/Minor", 0) :: TrackerAccessNode<number>,
		["Patch"] = constructTracker("Version/Patch", 0) :: TrackerAccessNode<number>,
	},
	["GameplayEvent"] = {
		["Explore"] = constructTracker("GameplayEvent/Explore", nil) :: TrackerAccessNode<boolean>,
		["PetManagement"] = constructTracker("GameplayEvent/PetManagement", nil) :: TrackerAccessNode<boolean>,
		["PetHatch"] = constructTracker("GameplayEvent/PetHatch", nil) :: TrackerAccessNode<boolean>,
		["UpgradingTycoon"] = constructTracker("GameplayEvent/UpgradingTycoon", nil) :: TrackerAccessNode<boolean>,
		["RunningStation"] = constructTracker("GameplayEvent/RunningStation", nil) :: TrackerAccessNode<boolean>,
		["IdleTycoon"] = constructTracker("GameplayEvent/IdleTycoon", nil) :: TrackerAccessNode<boolean>,
		["VisitTycoon"] = constructTracker("GameplayEvent/VisitTycoon", nil) :: TrackerAccessNode<boolean>,
		["Obby"] = {
			["Easy"] = constructTracker("GameplayEvent/Obby/Easy", nil) :: TrackerAccessNode<boolean>,
			["Hard"] = constructTracker("GameplayEvent/Obby/Hard", nil) :: TrackerAccessNode<boolean>,
		},
	},
	["Rebirths"] = {
		["Count"] = constructTracker("Rebirths/Count", 0) :: TrackerAccessNode<number>,
		["IsUnlocked"] = constructTracker("Rebirths/IsUnlocked", nil) :: TrackerAccessNode<boolean>,
	},
	["Onboarding"] = {
		["Knead"] = {
			["Order"] = constructTracker("Onboarding/Knead/Order", 0) :: TrackerAccessNode<number?>,
			["Completed"] = constructTracker("Onboarding/Knead/Completed", 0) :: TrackerAccessNode<number?>,
			["Total"] = constructTracker("Onboarding/Knead/Total", nil) :: TrackerAccessNode<any?>,
		},
		["Bake"] = {
			["Order"] = constructTracker("Onboarding/Bake/Order", 0) :: TrackerAccessNode<number?>,
			["Completed"] = constructTracker("Onboarding/Bake/Completed", 0) :: TrackerAccessNode<number?>,
			["Total"] = constructTracker("Onboarding/Bake/Total", nil) :: TrackerAccessNode<any?>,
		},
		["Wrap"] = {
			["Order"] = constructTracker("Onboarding/Wrap/Order", 0) :: TrackerAccessNode<number?>,
			["Completed"] = constructTracker("Onboarding/Wrap/Completed", 0) :: TrackerAccessNode<number?>,
			["Total"] = constructTracker("Onboarding/Wrap/Total", nil) :: TrackerAccessNode<any?>,
		},
		["Collect"] = {
			["Order"] = constructTracker("Onboarding/Collect/Order", 0) :: TrackerAccessNode<number?>,
			["Completed"] = constructTracker("Onboarding/Collect/Completed", 0) :: TrackerAccessNode<number?>,
			["Total"] = constructTracker("Onboarding/Collect/Total", nil) :: TrackerAccessNode<any?>,
		},
		["Deposit"] = {
			["Order"] = constructTracker("Onboarding/Deposit/Order", 0) :: TrackerAccessNode<number?>,
			["Completed"] = constructTracker("Onboarding/Deposit/Completed", 0) :: TrackerAccessNode<number?>,
			["Total"] = constructTracker("Onboarding/Deposit/Total", nil) :: TrackerAccessNode<any?>,
		},
		["Deliver"] = {
			["Order"] = constructTracker("Onboarding/Deliver/Order", 0) :: TrackerAccessNode<number?>,
			["Completed"] = constructTracker("Onboarding/Deliver/Completed", 0) :: TrackerAccessNode<number?>,
			["Total"] = constructTracker("Onboarding/Deliver/Total", nil) :: TrackerAccessNode<any?>,
		},
		["Hatch"] = {
			["Order"] = constructTracker("Onboarding/Hatch/Order", 0) :: TrackerAccessNode<number?>,
			["Completed"] = constructTracker("Onboarding/Hatch/Completed", 0) :: TrackerAccessNode<number?>,
			["Total"] = constructTracker("Onboarding/Hatch/Total", nil) :: TrackerAccessNode<any?>,
		},
		["Assign"] = {
			["Order"] = constructTracker("Onboarding/Assign/Order", 0) :: TrackerAccessNode<number?>,
			["Completed"] = constructTracker("Onboarding/Assign/Completed", 0) :: TrackerAccessNode<number?>,
			["Total"] = constructTracker("Onboarding/Assign/Total", nil) :: TrackerAccessNode<any?>,
		},
	},
	["Multiplier"] = {
		["Total"] = constructTracker("Multiplier/Total", 2) :: TrackerAccessNode<number>,
		["Additions"] = {
			["RebirthCount"] = constructTracker("Multiplier/Additions/RebirthCount", 2) :: TrackerAccessNode<number>,
			["IsInGroup"] = constructTracker("Multiplier/Additions/IsInGroup", 2) :: TrackerAccessNode<number>,
		},
		["Weights"] = {
			["ActiveTimer"] = constructTracker("Multiplier/Weights/ActiveTimer", 2) :: TrackerAccessNode<number>,
			["DoubleBread"] = constructTracker("Multiplier/Weights/DoubleBread", 2) :: TrackerAccessNode<number>,
			["GlobalTimer"] = constructTracker("Multiplier/Weights/GlobalTimer", 2) :: TrackerAccessNode<number>,
			["TimedReward"] = constructTracker("Multiplier/Weights/TimedReward", 2) :: TrackerAccessNode<number>,
		},
	},
	["Timer"] = {
		["Level1"] = constructTracker("Timer/Level1", nil) :: TrackerAccessNode<TimerLevel1Type>,
		["Level2"] = constructTracker("Timer/Level2", nil) :: TrackerAccessNode<TimerLevel2Type>,
		["Level3"] = constructTracker("Timer/Level3", nil) :: TrackerAccessNode<TimerLevel3Type>,
		["Level4"] = constructTracker("Timer/Level4", nil) :: TrackerAccessNode<TimerLevel4Type>,
		["Level5"] = constructTracker("Timer/Level5", nil) :: TrackerAccessNode<TimerLevel5Type>,
		["Level6"] = constructTracker("Timer/Level6", nil) :: TrackerAccessNode<TimerLevel6Type>,
		["Level7"] = constructTracker("Timer/Level7", nil) :: TrackerAccessNode<TimerLevel7Type>,
		["Level8"] = constructTracker("Timer/Level8", nil) :: TrackerAccessNode<TimerLevel8Type>,
		["Level9"] = constructTracker("Timer/Level9", nil) :: TrackerAccessNode<TimerLevel9Type>,
		["Level10"] = constructTracker("Timer/Level10", nil) :: TrackerAccessNode<TimerLevel10Type>,
		["Level11"] = constructTracker("Timer/Level11", nil) :: TrackerAccessNode<TimerLevel11Type>,
		["Level12"] = constructTracker("Timer/Level12", nil) :: TrackerAccessNode<TimerLevel12Type>,
	},
	["PositionPercent"] = {
		["X"] = constructTracker("PositionPercent/X", 0) :: TrackerAccessNode<number?>,
		["Z"] = constructTracker("PositionPercent/Z", 0) :: TrackerAccessNode<number?>,
	},
	["Pets"] = {
		["Cat_Silver_1"] = constructTracker("Pets/Cat_Silver_1", 0) :: TrackerAccessNode<number?>,
		["Cat_Gold_1"] = constructTracker("Pets/Cat_Gold_1", 0) :: TrackerAccessNode<number?>,
		["Cat_Diamond_1"] = constructTracker("Pets/Cat_Diamond_1", 0) :: TrackerAccessNode<number?>,
		["Cat_Normal_1"] = constructTracker("Pets/Cat_Normal_1", 0) :: TrackerAccessNode<number?>,
		["Dog_Silver_1"] = constructTracker("Pets/Dog_Silver_1", 0) :: TrackerAccessNode<number?>,
		["Dog_Gold_1"] = constructTracker("Pets/Dog_Gold_1", 0) :: TrackerAccessNode<number?>,
		["Dog_Diamond_1"] = constructTracker("Pets/Dog_Diamond_1", 0) :: TrackerAccessNode<number?>,
		["Dog_Normal_1"] = constructTracker("Pets/Dog_Normal_1", 0) :: TrackerAccessNode<number?>,
		["Mouse_Silver_1"] = constructTracker("Pets/Mouse_Silver_1", 0) :: TrackerAccessNode<number?>,
		["Mouse_Gold_1"] = constructTracker("Pets/Mouse_Gold_1", 0) :: TrackerAccessNode<number?>,
		["Mouse_Diamond_1"] = constructTracker("Pets/Mouse_Diamond_1", 0) :: TrackerAccessNode<number?>,
		["Mouse_Normal_1"] = constructTracker("Pets/Mouse_Normal_1", 0) :: TrackerAccessNode<number?>,
		["Bird_Silver_1"] = constructTracker("Pets/Bird_Silver_1", 0) :: TrackerAccessNode<number?>,
		["Bird_Gold_1"] = constructTracker("Pets/Bird_Gold_1", 0) :: TrackerAccessNode<number?>,
		["Bird_Diamond_1"] = constructTracker("Pets/Bird_Diamond_1", 0) :: TrackerAccessNode<number?>,
		["Bird_Normal_1"] = constructTracker("Pets/Bird_Normal_1", 0) :: TrackerAccessNode<number?>,
		["Cat_Silver_2"] = constructTracker("Pets/Cat_Silver_2", 0) :: TrackerAccessNode<number?>,
		["Cat_Gold_2"] = constructTracker("Pets/Cat_Gold_2", 0) :: TrackerAccessNode<number?>,
		["Cat_Diamond_2"] = constructTracker("Pets/Cat_Diamond_2", 0) :: TrackerAccessNode<number?>,
		["Cat_Normal_2"] = constructTracker("Pets/Cat_Normal_2", 0) :: TrackerAccessNode<number?>,
		["Dog_Silver_2"] = constructTracker("Pets/Dog_Silver_2", 0) :: TrackerAccessNode<number?>,
		["Dog_Gold_2"] = constructTracker("Pets/Dog_Gold_2", 0) :: TrackerAccessNode<number?>,
		["Dog_Diamond_2"] = constructTracker("Pets/Dog_Diamond_2", 0) :: TrackerAccessNode<number?>,
		["Dog_Normal_2"] = constructTracker("Pets/Dog_Normal_2", 0) :: TrackerAccessNode<number?>,
		["Mouse_Silver_2"] = constructTracker("Pets/Mouse_Silver_2", 0) :: TrackerAccessNode<number?>,
		["Mouse_Gold_2"] = constructTracker("Pets/Mouse_Gold_2", 0) :: TrackerAccessNode<number?>,
		["Mouse_Diamond_2"] = constructTracker("Pets/Mouse_Diamond_2", 0) :: TrackerAccessNode<number?>,
		["Mouse_Normal_2"] = constructTracker("Pets/Mouse_Normal_2", 0) :: TrackerAccessNode<number?>,
		["Bird_Silver_2"] = constructTracker("Pets/Bird_Silver_2", 0) :: TrackerAccessNode<number?>,
		["Bird_Gold_2"] = constructTracker("Pets/Bird_Gold_2", 0) :: TrackerAccessNode<number?>,
		["Bird_Diamond_2"] = constructTracker("Pets/Bird_Diamond_2", 0) :: TrackerAccessNode<number?>,
		["Bird_Normal_2"] = constructTracker("Pets/Bird_Normal_2", 0) :: TrackerAccessNode<number?>,
		["Cat_Silver_3"] = constructTracker("Pets/Cat_Silver_3", 0) :: TrackerAccessNode<number?>,
		["Cat_Gold_3"] = constructTracker("Pets/Cat_Gold_3", 0) :: TrackerAccessNode<number?>,
		["Cat_Diamond_3"] = constructTracker("Pets/Cat_Diamond_3", 0) :: TrackerAccessNode<number?>,
		["Cat_Normal_3"] = constructTracker("Pets/Cat_Normal_3", 0) :: TrackerAccessNode<number?>,
		["Dog_Silver_3"] = constructTracker("Pets/Dog_Silver_3", 0) :: TrackerAccessNode<number?>,
		["Dog_Gold_3"] = constructTracker("Pets/Dog_Gold_3", 0) :: TrackerAccessNode<number?>,
		["Dog_Diamond_3"] = constructTracker("Pets/Dog_Diamond_3", 0) :: TrackerAccessNode<number?>,
		["Dog_Normal_3"] = constructTracker("Pets/Dog_Normal_3", 0) :: TrackerAccessNode<number?>,
		["Mouse_Silver_3"] = constructTracker("Pets/Mouse_Silver_3", 0) :: TrackerAccessNode<number?>,
		["Mouse_Gold_3"] = constructTracker("Pets/Mouse_Gold_3", 0) :: TrackerAccessNode<number?>,
		["Mouse_Diamond_3"] = constructTracker("Pets/Mouse_Diamond_3", 0) :: TrackerAccessNode<number?>,
		["Mouse_Normal_3"] = constructTracker("Pets/Mouse_Normal_3", 0) :: TrackerAccessNode<number?>,
		["Bird_Silver_3"] = constructTracker("Pets/Bird_Silver_3", 0) :: TrackerAccessNode<number?>,
		["Bird_Gold_3"] = constructTracker("Pets/Bird_Gold_3", 0) :: TrackerAccessNode<number?>,
		["Bird_Diamond_3"] = constructTracker("Pets/Bird_Diamond_3", 0) :: TrackerAccessNode<number?>,
		["Bird_Normal_3"] = constructTracker("Pets/Bird_Normal_3", 0) :: TrackerAccessNode<number?>,
		["Cat_Silver_4"] = constructTracker("Pets/Cat_Silver_4", 0) :: TrackerAccessNode<number?>,
		["Cat_Gold_4"] = constructTracker("Pets/Cat_Gold_4", 0) :: TrackerAccessNode<number?>,
		["Cat_Diamond_4"] = constructTracker("Pets/Cat_Diamond_4", 0) :: TrackerAccessNode<number?>,
		["Cat_Normal_4"] = constructTracker("Pets/Cat_Normal_4", 0) :: TrackerAccessNode<number?>,
		["Dog_Silver_4"] = constructTracker("Pets/Dog_Silver_4", 0) :: TrackerAccessNode<number?>,
		["Dog_Gold_4"] = constructTracker("Pets/Dog_Gold_4", 0) :: TrackerAccessNode<number?>,
		["Dog_Diamond_4"] = constructTracker("Pets/Dog_Diamond_4", 0) :: TrackerAccessNode<number?>,
		["Dog_Normal_4"] = constructTracker("Pets/Dog_Normal_4", 0) :: TrackerAccessNode<number?>,
		["Mouse_Silver_4"] = constructTracker("Pets/Mouse_Silver_4", 0) :: TrackerAccessNode<number?>,
		["Mouse_Gold_4"] = constructTracker("Pets/Mouse_Gold_4", 0) :: TrackerAccessNode<number?>,
		["Mouse_Diamond_4"] = constructTracker("Pets/Mouse_Diamond_4", 0) :: TrackerAccessNode<number?>,
		["Mouse_Normal_4"] = constructTracker("Pets/Mouse_Normal_4", 0) :: TrackerAccessNode<number?>,
		["Bird_Silver_4"] = constructTracker("Pets/Bird_Silver_4", 0) :: TrackerAccessNode<number?>,
		["Bird_Gold_4"] = constructTracker("Pets/Bird_Gold_4", 0) :: TrackerAccessNode<number?>,
		["Bird_Diamond_4"] = constructTracker("Pets/Bird_Diamond_4", 0) :: TrackerAccessNode<number?>,
		["Bird_Normal_4"] = constructTracker("Pets/Bird_Normal_4", 0) :: TrackerAccessNode<number?>,
		["Cat_Silver_5"] = constructTracker("Pets/Cat_Silver_5", 0) :: TrackerAccessNode<number?>,
		["Cat_Gold_5"] = constructTracker("Pets/Cat_Gold_5", 0) :: TrackerAccessNode<number?>,
		["Cat_Diamond_5"] = constructTracker("Pets/Cat_Diamond_5", 0) :: TrackerAccessNode<number?>,
		["Cat_Normal_5"] = constructTracker("Pets/Cat_Normal_5", 0) :: TrackerAccessNode<number?>,
		["Dog_Silver_5"] = constructTracker("Pets/Dog_Silver_5", 0) :: TrackerAccessNode<number?>,
		["Dog_Gold_5"] = constructTracker("Pets/Dog_Gold_5", 0) :: TrackerAccessNode<number?>,
		["Dog_Diamond_5"] = constructTracker("Pets/Dog_Diamond_5", 0) :: TrackerAccessNode<number?>,
		["Dog_Normal_5"] = constructTracker("Pets/Dog_Normal_5", 0) :: TrackerAccessNode<number?>,
		["Mouse_Silver_5"] = constructTracker("Pets/Mouse_Silver_5", 0) :: TrackerAccessNode<number?>,
		["Mouse_Gold_5"] = constructTracker("Pets/Mouse_Gold_5", 0) :: TrackerAccessNode<number?>,
		["Mouse_Diamond_5"] = constructTracker("Pets/Mouse_Diamond_5", 0) :: TrackerAccessNode<number?>,
		["Mouse_Normal_5"] = constructTracker("Pets/Mouse_Normal_5", 0) :: TrackerAccessNode<number?>,
		["Bird_Silver_5"] = constructTracker("Pets/Bird_Silver_5", 0) :: TrackerAccessNode<number?>,
		["Bird_Gold_5"] = constructTracker("Pets/Bird_Gold_5", 0) :: TrackerAccessNode<number?>,
		["Bird_Diamond_5"] = constructTracker("Pets/Bird_Diamond_5", 0) :: TrackerAccessNode<number?>,
		["Bird_Normal_5"] = constructTracker("Pets/Bird_Normal_5", 0) :: TrackerAccessNode<number?>,
	},
	["Tycoon"] = {
		["Truck"] = {
			["DeliveryCount"] = constructTracker("Tycoon/Truck/DeliveryCount", 0) :: TrackerAccessNode<number>,
			["LastDelivery"] = {
				["Count"] = constructTracker("Tycoon/Truck/LastDelivery/Count", 0) :: TrackerAccessNode<number?>,
				["Value"] = constructTracker("Tycoon/Truck/LastDelivery/Value", 0) :: TrackerAccessNode<number?>,
			},
		},
		["Windmill"] = {
			["Level"] = {
				["Value"] = constructTracker("Tycoon/Windmill/Level/Value", 0) :: TrackerAccessNode<number?>,
				["Recharge"] = constructTracker("Tycoon/Windmill/Level/Recharge", 0) :: TrackerAccessNode<number?>,
			},
		},
		["Wrapper"] = {
			["PetBalanceId"] = constructTracker("Tycoon/Wrapper/PetBalanceId", nil) :: TrackerAccessNode<TycoonWrapperPetBalanceIdType>,
			["Level"] = {
				["Multiplier"] = constructTracker("Tycoon/Wrapper/Level/Multiplier", 0) :: TrackerAccessNode<number?>,
				["Recharge"] = constructTracker("Tycoon/Wrapper/Level/Recharge", 0) :: TrackerAccessNode<number?>,
			},
		},
		["Kneader"] = {
			["PetBalanceId"] = constructTracker("Tycoon/Kneader/PetBalanceId", nil) :: TrackerAccessNode<TycoonKneaderPetBalanceIdType>,
			["Level"] = {
				["Multiplier"] = constructTracker("Tycoon/Kneader/Level/Multiplier", 0) :: TrackerAccessNode<number?>,
				["Recharge"] = constructTracker("Tycoon/Kneader/Level/Recharge", 0) :: TrackerAccessNode<number?>,
			},
		},
		["Oven"] = {
			["PetBalanceId"] = constructTracker("Tycoon/Oven/PetBalanceId", nil) :: TrackerAccessNode<TycoonOvenPetBalanceIdType>,
			["Level"] = {
				["Value"] = constructTracker("Tycoon/Oven/Level/Value", 0) :: TrackerAccessNode<number?>,
				["Recharge"] = constructTracker("Tycoon/Oven/Level/Recharge", 0) :: TrackerAccessNode<number?>,
			},
		},
		["Rack"] = {
			["Level"] = {
				["Storage"] = constructTracker("Tycoon/Rack/Level/Storage", 0) :: TrackerAccessNode<number?>,
			},
		},
	},
	["Chat"] = {
		["LastMessage"] = constructTracker("Chat/LastMessage", nil) :: TrackerAccessNode<string>,
		["Count"] = constructTracker("Chat/Count", 0) :: TrackerAccessNode<number>,
	},
	["Population"] = {
		["Total"] = constructTracker("Population/Total", 0) :: TrackerAccessNode<number>,
		["Team"] = constructTracker("Population/Team", 0) :: TrackerAccessNode<number>,
		["PeakFriends"] = constructTracker("Population/PeakFriends", 0) :: TrackerAccessNode<number>,
		["Friends"] = constructTracker("Population/Friends", 0) :: TrackerAccessNode<number>,
		["SpeakingDistance"] = constructTracker("Population/SpeakingDistance", 0) :: TrackerAccessNode<number>,
	},
	["Performance"] = {
		["Server"] = {
			["EventsPerMinute"] = constructTracker("Performance/Server/EventsPerMinute", 0) :: TrackerAccessNode<number>,
			["Ping"] = constructTracker("Performance/Server/Ping", 0) :: TrackerAccessNode<number>,
			["ServerTime"] = constructTracker("Performance/Server/ServerTime", 0) :: TrackerAccessNode<number>,
			["HeartRate"] = constructTracker("Performance/Server/HeartRate", 0) :: TrackerAccessNode<number>,
			["Instances"] = constructTracker("Performance/Server/Instances", 0) :: TrackerAccessNode<number>,
			["MovingParts"] = constructTracker("Performance/Server/MovingParts", 0) :: TrackerAccessNode<number>,
			["Network"] = {
				["Data"] = {
					["Send"] = constructTracker("Performance/Server/Network/Data/Send", 0) :: TrackerAccessNode<number>,
					["Receive"] = constructTracker("Performance/Server/Network/Data/Receive", 0) :: TrackerAccessNode<number>,
				},
				["Physics"] = {
					["Send"] = constructTracker("Performance/Server/Network/Physics/Send", 0) :: TrackerAccessNode<number>,
					["Receive"] = constructTracker("Performance/Server/Network/Physics/Receive", 0) :: TrackerAccessNode<number>,
				},
				["Memory"] = {
					["Internal"] = constructTracker("Performance/Server/Network/Memory/Internal", 0) :: TrackerAccessNode<number>,
					["HttpCache"] = constructTracker("Performance/Server/Network/Memory/HttpCache", 0) :: TrackerAccessNode<number>,
					["Instances"] = constructTracker("Performance/Server/Network/Memory/Instances", 0) :: TrackerAccessNode<number>,
					["Signals"] = constructTracker("Performance/Server/Network/Memory/Signals", 0) :: TrackerAccessNode<number>,
					["LuaHeap"] = constructTracker("Performance/Server/Network/Memory/LuaHeap", 0) :: TrackerAccessNode<number>,
					["Script"] = constructTracker("Performance/Server/Network/Memory/Script", 0) :: TrackerAccessNode<number>,
					["PhysicsCollision"] = constructTracker("Performance/Server/Network/Memory/PhysicsCollision", 0) :: TrackerAccessNode<number>,
					["PhysicsParts"] = constructTracker("Performance/Server/Network/Memory/PhysicsParts", 0) :: TrackerAccessNode<number>,
					["CSG"] = constructTracker("Performance/Server/Network/Memory/CSG", 0) :: TrackerAccessNode<number>,
					["Particle"] = constructTracker("Performance/Server/Network/Memory/Particle", 0) :: TrackerAccessNode<number>,
					["Part"] = constructTracker("Performance/Server/Network/Memory/Part", 0) :: TrackerAccessNode<number>,
					["MeshPart"] = constructTracker("Performance/Server/Network/Memory/MeshPart", 0) :: TrackerAccessNode<number>,
					["SpatialHash"] = constructTracker("Performance/Server/Network/Memory/SpatialHash", 0) :: TrackerAccessNode<number>,
					["TerrainGraphics"] = constructTracker("Performance/Server/Network/Memory/TerrainGraphics", 0) :: TrackerAccessNode<number>,
					["Textures"] = constructTracker("Performance/Server/Network/Memory/Textures", 0) :: TrackerAccessNode<number>,
					["CharacterTextures"] = constructTracker("Performance/Server/Network/Memory/CharacterTextures", 0) :: TrackerAccessNode<number>,
					["SoundsData"] = constructTracker("Performance/Server/Network/Memory/SoundsData", 0) :: TrackerAccessNode<number>,
					["SoundsStreaming"] = constructTracker("Performance/Server/Network/Memory/SoundsStreaming", 0) :: TrackerAccessNode<number>,
					["TerrainVoxels"] = constructTracker("Performance/Server/Network/Memory/TerrainVoxels", 0) :: TrackerAccessNode<number>,
					["Guis"] = constructTracker("Performance/Server/Network/Memory/Guis", 0) :: TrackerAccessNode<number>,
					["Animations"] = constructTracker("Performance/Server/Network/Memory/Animations", 0) :: TrackerAccessNode<number>,
					["Pathfinding"] = constructTracker("Performance/Server/Network/Memory/Pathfinding", 0) :: TrackerAccessNode<number>,
				},
			},
		},
	},
	["Market"] = {
		["Spending"] = {
			["Gamepass"] = constructTracker("Market/Spending/Gamepass", 0) :: TrackerAccessNode<number>,
			["Product"] = constructTracker("Market/Spending/Product", 0) :: TrackerAccessNode<number>,
			["Total"] = constructTracker("Market/Spending/Total", 0) :: TrackerAccessNode<number>,
		},
		["Gamepasses"] = {
			["DoubleBreadValue"] = constructTracker("Market/Gamepasses/DoubleBreadValue", nil) :: TrackerAccessNode<boolean>,
			["SuperKneader"] = constructTracker("Market/Gamepasses/SuperKneader", nil) :: TrackerAccessNode<boolean>,
			["SuperOven"] = constructTracker("Market/Gamepasses/SuperOven", nil) :: TrackerAccessNode<boolean>,
			["SuperWrapper"] = constructTracker("Market/Gamepasses/SuperWrapper", nil) :: TrackerAccessNode<boolean>,
			["InfiniteTray"] = constructTracker("Market/Gamepasses/InfiniteTray", nil) :: TrackerAccessNode<boolean>,
		},
		["Purchase"] = {
			["Product"] = {
				["Name"] = constructTracker("Market/Purchase/Product/Name", nil) :: TrackerAccessNode<MarketPurchaseProductNameType>,
				["Price"] = constructTracker("Market/Purchase/Product/Price", 0) :: TrackerAccessNode<number>,
			},
			["Gamepass"] = {
				["Name"] = constructTracker("Market/Purchase/Gamepass/Name", nil) :: TrackerAccessNode<MarketPurchaseGamepassNameType>,
				["Price"] = constructTracker("Market/Purchase/Gamepass/Price", 0) :: TrackerAccessNode<number>,
			},
		},
	},
	["Groups"] = {
		["NSG"] = constructTracker("Groups/NSG", nil) :: TrackerAccessNode<boolean>,
	},
	["Demographics"] = {
		["AccountAge"] = constructTracker("Demographics/AccountAge", 0) :: TrackerAccessNode<number>,
		["RobloxLangugage"] = constructTracker("Demographics/RobloxLangugage", nil) :: TrackerAccessNode<string>,
		["SystemLanguage"] = constructTracker("Demographics/SystemLanguage", nil) :: TrackerAccessNode<string>,
		["Platform"] = {
			["Accelerometer"] = constructTracker("Demographics/Platform/Accelerometer", nil) :: TrackerAccessNode<boolean>,
			["Gamepad"] = constructTracker("Demographics/Platform/Gamepad", nil) :: TrackerAccessNode<boolean>,
			["Gyroscope"] = constructTracker("Demographics/Platform/Gyroscope", nil) :: TrackerAccessNode<boolean>,
			["Keyboard"] = constructTracker("Demographics/Platform/Keyboard", nil) :: TrackerAccessNode<boolean>,
			["Mouse"] = constructTracker("Demographics/Platform/Mouse", nil) :: TrackerAccessNode<boolean>,
			["Touch"] = constructTracker("Demographics/Platform/Touch", nil) :: TrackerAccessNode<boolean>,
			["ScreenSize"] = constructTracker("Demographics/Platform/ScreenSize", 0) :: TrackerAccessNode<number>,
			["ScreenRatio"] = constructTracker("Demographics/Platform/ScreenRatio", nil) :: TrackerAccessNode<DemographicsPlatformScreenRatioType>,
		},
	},
}