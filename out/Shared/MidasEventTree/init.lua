--!strict
-- this script was generated by nightcycle/midas-clt, do not manually edit

-- Packages
local Midas = require(game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Midas"))

-- Types
export type TriggerNode = (player: Player) -> nil
export type TimerLevel1Type = "Available" | "Locked" | "Reloading"
export type TimerLevel2Type = "Available" | "Locked" | "Reloading"
export type TimerLevel3Type = "Available" | "Locked" | "Reloading"
export type TimerLevel4Type = "Available" | "Locked" | "Reloading"
export type TimerLevel5Type = "Available" | "Locked" | "Reloading"
export type TimerLevel6Type = "Available" | "Locked" | "Reloading"
export type TimerLevel7Type = "Available" | "Locked" | "Reloading"
export type TimerLevel8Type = "Available" | "Locked" | "Reloading"
export type TimerLevel9Type = "Available" | "Locked" | "Reloading"
export type TimerLevel10Type = "Available" | "Locked" | "Reloading"
export type TimerLevel11Type = "Available" | "Locked" | "Reloading"
export type TimerLevel12Type = "Available" | "Locked" | "Reloading"
export type TycoonWrapperPetBalanceIdType = "None" | "Cat_Silver_1" | "Cat_Gold_1" | "Cat_Diamond_1" | "Cat_Normal_1" | "Dog_Silver_1" | "Dog_Gold_1" | "Dog_Diamond_1" | "Dog_Normal_1" | "Mouse_Silver_1" | "Mouse_Gold_1" | "Mouse_Diamond_1" | "Mouse_Normal_1" | "Bird_Silver_1" | "Bird_Gold_1" | "Bird_Diamond_1" | "Bird_Normal_1" | "Cat_Silver_2" | "Cat_Gold_2" | "Cat_Diamond_2" | "Cat_Normal_2" | "Dog_Silver_2" | "Dog_Gold_2" | "Dog_Diamond_2" | "Dog_Normal_2" | "Mouse_Silver_2" | "Mouse_Gold_2" | "Mouse_Diamond_2" | "Mouse_Normal_2" | "Bird_Silver_2" | "Bird_Gold_2" | "Bird_Diamond_2" | "Bird_Normal_2" | "Cat_Silver_3" | "Cat_Gold_3" | "Cat_Diamond_3" | "Cat_Normal_3" | "Dog_Silver_3" | "Dog_Gold_3" | "Dog_Diamond_3" | "Dog_Normal_3" | "Mouse_Silver_3" | "Mouse_Gold_3" | "Mouse_Diamond_3" | "Mouse_Normal_3" | "Bird_Silver_3" | "Bird_Gold_3" | "Bird_Diamond_3" | "Bird_Normal_3" | "Cat_Silver_4" | "Cat_Gold_4" | "Cat_Diamond_4" | "Cat_Normal_4" | "Dog_Silver_4" | "Dog_Gold_4" | "Dog_Diamond_4" | "Dog_Normal_4" | "Mouse_Silver_4" | "Mouse_Gold_4" | "Mouse_Diamond_4" | "Mouse_Normal_4" | "Bird_Silver_4" | "Bird_Gold_4" | "Bird_Diamond_4" | "Bird_Normal_4" | "Cat_Silver_5" | "Cat_Gold_5" | "Cat_Diamond_5" | "Cat_Normal_5" | "Dog_Silver_5" | "Dog_Gold_5" | "Dog_Diamond_5" | "Dog_Normal_5" | "Mouse_Silver_5" | "Mouse_Gold_5" | "Mouse_Diamond_5" | "Mouse_Normal_5" | "Bird_Silver_5" | "Bird_Gold_5" | "Bird_Diamond_5" | "Bird_Normal_5"
export type TycoonKneaderPetBalanceIdType = "None" | "Cat_Silver_1" | "Cat_Gold_1" | "Cat_Diamond_1" | "Cat_Normal_1" | "Dog_Silver_1" | "Dog_Gold_1" | "Dog_Diamond_1" | "Dog_Normal_1" | "Mouse_Silver_1" | "Mouse_Gold_1" | "Mouse_Diamond_1" | "Mouse_Normal_1" | "Bird_Silver_1" | "Bird_Gold_1" | "Bird_Diamond_1" | "Bird_Normal_1" | "Cat_Silver_2" | "Cat_Gold_2" | "Cat_Diamond_2" | "Cat_Normal_2" | "Dog_Silver_2" | "Dog_Gold_2" | "Dog_Diamond_2" | "Dog_Normal_2" | "Mouse_Silver_2" | "Mouse_Gold_2" | "Mouse_Diamond_2" | "Mouse_Normal_2" | "Bird_Silver_2" | "Bird_Gold_2" | "Bird_Diamond_2" | "Bird_Normal_2" | "Cat_Silver_3" | "Cat_Gold_3" | "Cat_Diamond_3" | "Cat_Normal_3" | "Dog_Silver_3" | "Dog_Gold_3" | "Dog_Diamond_3" | "Dog_Normal_3" | "Mouse_Silver_3" | "Mouse_Gold_3" | "Mouse_Diamond_3" | "Mouse_Normal_3" | "Bird_Silver_3" | "Bird_Gold_3" | "Bird_Diamond_3" | "Bird_Normal_3" | "Cat_Silver_4" | "Cat_Gold_4" | "Cat_Diamond_4" | "Cat_Normal_4" | "Dog_Silver_4" | "Dog_Gold_4" | "Dog_Diamond_4" | "Dog_Normal_4" | "Mouse_Silver_4" | "Mouse_Gold_4" | "Mouse_Diamond_4" | "Mouse_Normal_4" | "Bird_Silver_4" | "Bird_Gold_4" | "Bird_Diamond_4" | "Bird_Normal_4" | "Cat_Silver_5" | "Cat_Gold_5" | "Cat_Diamond_5" | "Cat_Normal_5" | "Dog_Silver_5" | "Dog_Gold_5" | "Dog_Diamond_5" | "Dog_Normal_5" | "Mouse_Silver_5" | "Mouse_Gold_5" | "Mouse_Diamond_5" | "Mouse_Normal_5" | "Bird_Silver_5" | "Bird_Gold_5" | "Bird_Diamond_5" | "Bird_Normal_5"
export type TycoonOvenPetBalanceIdType = "None" | "Cat_Silver_1" | "Cat_Gold_1" | "Cat_Diamond_1" | "Cat_Normal_1" | "Dog_Silver_1" | "Dog_Gold_1" | "Dog_Diamond_1" | "Dog_Normal_1" | "Mouse_Silver_1" | "Mouse_Gold_1" | "Mouse_Diamond_1" | "Mouse_Normal_1" | "Bird_Silver_1" | "Bird_Gold_1" | "Bird_Diamond_1" | "Bird_Normal_1" | "Cat_Silver_2" | "Cat_Gold_2" | "Cat_Diamond_2" | "Cat_Normal_2" | "Dog_Silver_2" | "Dog_Gold_2" | "Dog_Diamond_2" | "Dog_Normal_2" | "Mouse_Silver_2" | "Mouse_Gold_2" | "Mouse_Diamond_2" | "Mouse_Normal_2" | "Bird_Silver_2" | "Bird_Gold_2" | "Bird_Diamond_2" | "Bird_Normal_2" | "Cat_Silver_3" | "Cat_Gold_3" | "Cat_Diamond_3" | "Cat_Normal_3" | "Dog_Silver_3" | "Dog_Gold_3" | "Dog_Diamond_3" | "Dog_Normal_3" | "Mouse_Silver_3" | "Mouse_Gold_3" | "Mouse_Diamond_3" | "Mouse_Normal_3" | "Bird_Silver_3" | "Bird_Gold_3" | "Bird_Diamond_3" | "Bird_Normal_3" | "Cat_Silver_4" | "Cat_Gold_4" | "Cat_Diamond_4" | "Cat_Normal_4" | "Dog_Silver_4" | "Dog_Gold_4" | "Dog_Diamond_4" | "Dog_Normal_4" | "Mouse_Silver_4" | "Mouse_Gold_4" | "Mouse_Diamond_4" | "Mouse_Normal_4" | "Bird_Silver_4" | "Bird_Gold_4" | "Bird_Diamond_4" | "Bird_Normal_4" | "Cat_Silver_5" | "Cat_Gold_5" | "Cat_Diamond_5" | "Cat_Normal_5" | "Dog_Silver_5" | "Dog_Gold_5" | "Dog_Diamond_5" | "Dog_Normal_5" | "Mouse_Silver_5" | "Mouse_Gold_5" | "Mouse_Diamond_5" | "Mouse_Normal_5" | "Bird_Silver_5" | "Bird_Gold_5" | "Bird_Diamond_5" | "Bird_Normal_5"
export type MarketPurchaseProductNameType = "Donate5" | "Donate10" | "Donate25" | "Donate50" | "Donate100" | "Donate200" | "Donate500" | "DoubleBread2" | "DoubleBread5" | "DoubleBread10" | "DoubleBread15" | "DoubleBread30" | "DoubleBread60" | "ServerDoubleBread2" | "ServerDoubleBread5" | "ServerDoubleBread10" | "ServerDoubleBread15" | "ServerDoubleBread30" | "ServerDoubleBread60" | "Cash5k" | "Cash10k" | "Cash50k" | "Cash100k" | "Cash250k" | "Cash500k"
export type MarketPurchaseGamepassNameType = "DoubleBreadValue" | "SuperKneader" | "SuperOven" | "SuperWrapper" | "InfiniteTray"
export type DemographicsPlatformScreenRatioType = "16:10" | "16:9" | "5:4" | "5:3" | "3:2" | "4:3" | "9:16" | "uncommon"

-- Class
function constructTrigger<T>(path: string, seriesDuration: number?): TriggerNode
	return function(player: Player)
			local keys: {[number]: string} = path:split("/")
			local propertyName = keys[#keys]
			table.remove(keys, #keys)
			local basePath = table.concat(keys, "/")
			local tracker = Midas:GetTracker(player, basePath)
			tracker:Fire(propertyName, nil, seriesDuration)
	end
end

return {
	["Duration"] = constructTrigger("Duration") :: TriggerNode,
	["IsStudio"] = constructTrigger("IsStudio") :: TriggerNode,
	["Cash"] = constructTrigger("Cash") :: TriggerNode,
	["DayReward"] = constructTrigger("DayReward") :: TriggerNode,
	["Id"] = {
		["Place"] = constructTrigger("Id/Place") :: TriggerNode,
		["Session"] = constructTrigger("Id/Session") :: TriggerNode,
		["User"] = constructTrigger("Id/User") :: TriggerNode,
	},
	["Index"] = {
		["Event"] = constructTrigger("Index/Event") :: TriggerNode,
		["Total"] = constructTrigger("Index/Total") :: TriggerNode,
	},
	["Version"] = {
		["Build"] = constructTrigger("Version/Build") :: TriggerNode,
		["Major"] = constructTrigger("Version/Major") :: TriggerNode,
		["Minor"] = constructTrigger("Version/Minor") :: TriggerNode,
		["Patch"] = constructTrigger("Version/Patch") :: TriggerNode,
	},
	["GameplayEvent"] = {
		["Explore"] = constructTrigger("GameplayEvent/Explore") :: TriggerNode,
		["PetManagement"] = constructTrigger("GameplayEvent/PetManagement") :: TriggerNode,
		["PetHatch"] = constructTrigger("GameplayEvent/PetHatch") :: TriggerNode,
		["UpgradingTycoon"] = constructTrigger("GameplayEvent/UpgradingTycoon") :: TriggerNode,
		["RunningStation"] = constructTrigger("GameplayEvent/RunningStation") :: TriggerNode,
		["IdleTycoon"] = constructTrigger("GameplayEvent/IdleTycoon") :: TriggerNode,
		["VisitTycoon"] = constructTrigger("GameplayEvent/VisitTycoon") :: TriggerNode,
		["Obby"] = {
			["Easy"] = constructTrigger("GameplayEvent/Obby/Easy") :: TriggerNode,
			["Hard"] = constructTrigger("GameplayEvent/Obby/Hard") :: TriggerNode,
		},
	},
	["Rebirths"] = {
		["Count"] = constructTrigger("Rebirths/Count") :: TriggerNode,
		["IsUnlocked"] = constructTrigger("Rebirths/IsUnlocked") :: TriggerNode,
	},
	["Onboarding"] = {
		["Knead"] = {
			["Order"] = constructTrigger("Onboarding/Knead/Order") :: TriggerNode,
			["Completed"] = constructTrigger("Onboarding/Knead/Completed") :: TriggerNode,
			["Total"] = constructTrigger("Onboarding/Knead/Total") :: TriggerNode,
		},
		["Bake"] = {
			["Order"] = constructTrigger("Onboarding/Bake/Order") :: TriggerNode,
			["Completed"] = constructTrigger("Onboarding/Bake/Completed") :: TriggerNode,
			["Total"] = constructTrigger("Onboarding/Bake/Total") :: TriggerNode,
		},
		["Wrap"] = {
			["Order"] = constructTrigger("Onboarding/Wrap/Order") :: TriggerNode,
			["Completed"] = constructTrigger("Onboarding/Wrap/Completed") :: TriggerNode,
			["Total"] = constructTrigger("Onboarding/Wrap/Total") :: TriggerNode,
		},
		["Collect"] = {
			["Order"] = constructTrigger("Onboarding/Collect/Order") :: TriggerNode,
			["Completed"] = constructTrigger("Onboarding/Collect/Completed") :: TriggerNode,
			["Total"] = constructTrigger("Onboarding/Collect/Total") :: TriggerNode,
		},
		["Deposit"] = {
			["Order"] = constructTrigger("Onboarding/Deposit/Order") :: TriggerNode,
			["Completed"] = constructTrigger("Onboarding/Deposit/Completed") :: TriggerNode,
			["Total"] = constructTrigger("Onboarding/Deposit/Total") :: TriggerNode,
		},
		["Deliver"] = {
			["Order"] = constructTrigger("Onboarding/Deliver/Order") :: TriggerNode,
			["Completed"] = constructTrigger("Onboarding/Deliver/Completed") :: TriggerNode,
			["Total"] = constructTrigger("Onboarding/Deliver/Total") :: TriggerNode,
		},
		["Hatch"] = {
			["Order"] = constructTrigger("Onboarding/Hatch/Order") :: TriggerNode,
			["Completed"] = constructTrigger("Onboarding/Hatch/Completed") :: TriggerNode,
			["Total"] = constructTrigger("Onboarding/Hatch/Total") :: TriggerNode,
		},
		["Assign"] = {
			["Order"] = constructTrigger("Onboarding/Assign/Order") :: TriggerNode,
			["Completed"] = constructTrigger("Onboarding/Assign/Completed") :: TriggerNode,
			["Total"] = constructTrigger("Onboarding/Assign/Total") :: TriggerNode,
		},
	},
	["Multiplier"] = {
		["Total"] = constructTrigger("Multiplier/Total") :: TriggerNode,
		["Additions"] = {
			["RebirthCount"] = constructTrigger("Multiplier/Additions/RebirthCount") :: TriggerNode,
			["IsInGroup"] = constructTrigger("Multiplier/Additions/IsInGroup") :: TriggerNode,
		},
		["Weights"] = {
			["ActiveTimer"] = constructTrigger("Multiplier/Weights/ActiveTimer") :: TriggerNode,
			["DoubleBread"] = constructTrigger("Multiplier/Weights/DoubleBread") :: TriggerNode,
			["GlobalTimer"] = constructTrigger("Multiplier/Weights/GlobalTimer") :: TriggerNode,
			["TimedReward"] = constructTrigger("Multiplier/Weights/TimedReward") :: TriggerNode,
		},
	},
	["Timer"] = {
		["Level1"] = constructTrigger("Timer/Level1") :: TriggerNode,
		["Level2"] = constructTrigger("Timer/Level2") :: TriggerNode,
		["Level3"] = constructTrigger("Timer/Level3") :: TriggerNode,
		["Level4"] = constructTrigger("Timer/Level4") :: TriggerNode,
		["Level5"] = constructTrigger("Timer/Level5") :: TriggerNode,
		["Level6"] = constructTrigger("Timer/Level6") :: TriggerNode,
		["Level7"] = constructTrigger("Timer/Level7") :: TriggerNode,
		["Level8"] = constructTrigger("Timer/Level8") :: TriggerNode,
		["Level9"] = constructTrigger("Timer/Level9") :: TriggerNode,
		["Level10"] = constructTrigger("Timer/Level10") :: TriggerNode,
		["Level11"] = constructTrigger("Timer/Level11") :: TriggerNode,
		["Level12"] = constructTrigger("Timer/Level12") :: TriggerNode,
	},
	["PositionPercent"] = {
		["X"] = constructTrigger("PositionPercent/X") :: TriggerNode,
		["Z"] = constructTrigger("PositionPercent/Z") :: TriggerNode,
	},
	["Pets"] = {
		["Cat_Silver_1"] = constructTrigger("Pets/Cat_Silver_1") :: TriggerNode,
		["Cat_Gold_1"] = constructTrigger("Pets/Cat_Gold_1") :: TriggerNode,
		["Cat_Diamond_1"] = constructTrigger("Pets/Cat_Diamond_1") :: TriggerNode,
		["Cat_Normal_1"] = constructTrigger("Pets/Cat_Normal_1") :: TriggerNode,
		["Dog_Silver_1"] = constructTrigger("Pets/Dog_Silver_1") :: TriggerNode,
		["Dog_Gold_1"] = constructTrigger("Pets/Dog_Gold_1") :: TriggerNode,
		["Dog_Diamond_1"] = constructTrigger("Pets/Dog_Diamond_1") :: TriggerNode,
		["Dog_Normal_1"] = constructTrigger("Pets/Dog_Normal_1") :: TriggerNode,
		["Mouse_Silver_1"] = constructTrigger("Pets/Mouse_Silver_1") :: TriggerNode,
		["Mouse_Gold_1"] = constructTrigger("Pets/Mouse_Gold_1") :: TriggerNode,
		["Mouse_Diamond_1"] = constructTrigger("Pets/Mouse_Diamond_1") :: TriggerNode,
		["Mouse_Normal_1"] = constructTrigger("Pets/Mouse_Normal_1") :: TriggerNode,
		["Bird_Silver_1"] = constructTrigger("Pets/Bird_Silver_1") :: TriggerNode,
		["Bird_Gold_1"] = constructTrigger("Pets/Bird_Gold_1") :: TriggerNode,
		["Bird_Diamond_1"] = constructTrigger("Pets/Bird_Diamond_1") :: TriggerNode,
		["Bird_Normal_1"] = constructTrigger("Pets/Bird_Normal_1") :: TriggerNode,
		["Cat_Silver_2"] = constructTrigger("Pets/Cat_Silver_2") :: TriggerNode,
		["Cat_Gold_2"] = constructTrigger("Pets/Cat_Gold_2") :: TriggerNode,
		["Cat_Diamond_2"] = constructTrigger("Pets/Cat_Diamond_2") :: TriggerNode,
		["Cat_Normal_2"] = constructTrigger("Pets/Cat_Normal_2") :: TriggerNode,
		["Dog_Silver_2"] = constructTrigger("Pets/Dog_Silver_2") :: TriggerNode,
		["Dog_Gold_2"] = constructTrigger("Pets/Dog_Gold_2") :: TriggerNode,
		["Dog_Diamond_2"] = constructTrigger("Pets/Dog_Diamond_2") :: TriggerNode,
		["Dog_Normal_2"] = constructTrigger("Pets/Dog_Normal_2") :: TriggerNode,
		["Mouse_Silver_2"] = constructTrigger("Pets/Mouse_Silver_2") :: TriggerNode,
		["Mouse_Gold_2"] = constructTrigger("Pets/Mouse_Gold_2") :: TriggerNode,
		["Mouse_Diamond_2"] = constructTrigger("Pets/Mouse_Diamond_2") :: TriggerNode,
		["Mouse_Normal_2"] = constructTrigger("Pets/Mouse_Normal_2") :: TriggerNode,
		["Bird_Silver_2"] = constructTrigger("Pets/Bird_Silver_2") :: TriggerNode,
		["Bird_Gold_2"] = constructTrigger("Pets/Bird_Gold_2") :: TriggerNode,
		["Bird_Diamond_2"] = constructTrigger("Pets/Bird_Diamond_2") :: TriggerNode,
		["Bird_Normal_2"] = constructTrigger("Pets/Bird_Normal_2") :: TriggerNode,
		["Cat_Silver_3"] = constructTrigger("Pets/Cat_Silver_3") :: TriggerNode,
		["Cat_Gold_3"] = constructTrigger("Pets/Cat_Gold_3") :: TriggerNode,
		["Cat_Diamond_3"] = constructTrigger("Pets/Cat_Diamond_3") :: TriggerNode,
		["Cat_Normal_3"] = constructTrigger("Pets/Cat_Normal_3") :: TriggerNode,
		["Dog_Silver_3"] = constructTrigger("Pets/Dog_Silver_3") :: TriggerNode,
		["Dog_Gold_3"] = constructTrigger("Pets/Dog_Gold_3") :: TriggerNode,
		["Dog_Diamond_3"] = constructTrigger("Pets/Dog_Diamond_3") :: TriggerNode,
		["Dog_Normal_3"] = constructTrigger("Pets/Dog_Normal_3") :: TriggerNode,
		["Mouse_Silver_3"] = constructTrigger("Pets/Mouse_Silver_3") :: TriggerNode,
		["Mouse_Gold_3"] = constructTrigger("Pets/Mouse_Gold_3") :: TriggerNode,
		["Mouse_Diamond_3"] = constructTrigger("Pets/Mouse_Diamond_3") :: TriggerNode,
		["Mouse_Normal_3"] = constructTrigger("Pets/Mouse_Normal_3") :: TriggerNode,
		["Bird_Silver_3"] = constructTrigger("Pets/Bird_Silver_3") :: TriggerNode,
		["Bird_Gold_3"] = constructTrigger("Pets/Bird_Gold_3") :: TriggerNode,
		["Bird_Diamond_3"] = constructTrigger("Pets/Bird_Diamond_3") :: TriggerNode,
		["Bird_Normal_3"] = constructTrigger("Pets/Bird_Normal_3") :: TriggerNode,
		["Cat_Silver_4"] = constructTrigger("Pets/Cat_Silver_4") :: TriggerNode,
		["Cat_Gold_4"] = constructTrigger("Pets/Cat_Gold_4") :: TriggerNode,
		["Cat_Diamond_4"] = constructTrigger("Pets/Cat_Diamond_4") :: TriggerNode,
		["Cat_Normal_4"] = constructTrigger("Pets/Cat_Normal_4") :: TriggerNode,
		["Dog_Silver_4"] = constructTrigger("Pets/Dog_Silver_4") :: TriggerNode,
		["Dog_Gold_4"] = constructTrigger("Pets/Dog_Gold_4") :: TriggerNode,
		["Dog_Diamond_4"] = constructTrigger("Pets/Dog_Diamond_4") :: TriggerNode,
		["Dog_Normal_4"] = constructTrigger("Pets/Dog_Normal_4") :: TriggerNode,
		["Mouse_Silver_4"] = constructTrigger("Pets/Mouse_Silver_4") :: TriggerNode,
		["Mouse_Gold_4"] = constructTrigger("Pets/Mouse_Gold_4") :: TriggerNode,
		["Mouse_Diamond_4"] = constructTrigger("Pets/Mouse_Diamond_4") :: TriggerNode,
		["Mouse_Normal_4"] = constructTrigger("Pets/Mouse_Normal_4") :: TriggerNode,
		["Bird_Silver_4"] = constructTrigger("Pets/Bird_Silver_4") :: TriggerNode,
		["Bird_Gold_4"] = constructTrigger("Pets/Bird_Gold_4") :: TriggerNode,
		["Bird_Diamond_4"] = constructTrigger("Pets/Bird_Diamond_4") :: TriggerNode,
		["Bird_Normal_4"] = constructTrigger("Pets/Bird_Normal_4") :: TriggerNode,
		["Cat_Silver_5"] = constructTrigger("Pets/Cat_Silver_5") :: TriggerNode,
		["Cat_Gold_5"] = constructTrigger("Pets/Cat_Gold_5") :: TriggerNode,
		["Cat_Diamond_5"] = constructTrigger("Pets/Cat_Diamond_5") :: TriggerNode,
		["Cat_Normal_5"] = constructTrigger("Pets/Cat_Normal_5") :: TriggerNode,
		["Dog_Silver_5"] = constructTrigger("Pets/Dog_Silver_5") :: TriggerNode,
		["Dog_Gold_5"] = constructTrigger("Pets/Dog_Gold_5") :: TriggerNode,
		["Dog_Diamond_5"] = constructTrigger("Pets/Dog_Diamond_5") :: TriggerNode,
		["Dog_Normal_5"] = constructTrigger("Pets/Dog_Normal_5") :: TriggerNode,
		["Mouse_Silver_5"] = constructTrigger("Pets/Mouse_Silver_5") :: TriggerNode,
		["Mouse_Gold_5"] = constructTrigger("Pets/Mouse_Gold_5") :: TriggerNode,
		["Mouse_Diamond_5"] = constructTrigger("Pets/Mouse_Diamond_5") :: TriggerNode,
		["Mouse_Normal_5"] = constructTrigger("Pets/Mouse_Normal_5") :: TriggerNode,
		["Bird_Silver_5"] = constructTrigger("Pets/Bird_Silver_5") :: TriggerNode,
		["Bird_Gold_5"] = constructTrigger("Pets/Bird_Gold_5") :: TriggerNode,
		["Bird_Diamond_5"] = constructTrigger("Pets/Bird_Diamond_5") :: TriggerNode,
		["Bird_Normal_5"] = constructTrigger("Pets/Bird_Normal_5") :: TriggerNode,
	},
	["Tycoon"] = {
		["Truck"] = {
			["DeliveryCount"] = constructTrigger("Tycoon/Truck/DeliveryCount") :: TriggerNode,
			["LastDelivery"] = {
				["Count"] = constructTrigger("Tycoon/Truck/LastDelivery/Count") :: TriggerNode,
				["Value"] = constructTrigger("Tycoon/Truck/LastDelivery/Value") :: TriggerNode,
			},
		},
		["Windmill"] = {
			["Level"] = {
				["Value"] = constructTrigger("Tycoon/Windmill/Level/Value") :: TriggerNode,
				["Recharge"] = constructTrigger("Tycoon/Windmill/Level/Recharge") :: TriggerNode,
			},
		},
		["Wrapper"] = {
			["PetBalanceId"] = constructTrigger("Tycoon/Wrapper/PetBalanceId") :: TriggerNode,
			["Level"] = {
				["Multiplier"] = constructTrigger("Tycoon/Wrapper/Level/Multiplier") :: TriggerNode,
				["Recharge"] = constructTrigger("Tycoon/Wrapper/Level/Recharge") :: TriggerNode,
			},
		},
		["Kneader"] = {
			["PetBalanceId"] = constructTrigger("Tycoon/Kneader/PetBalanceId") :: TriggerNode,
			["Level"] = {
				["Multiplier"] = constructTrigger("Tycoon/Kneader/Level/Multiplier") :: TriggerNode,
				["Recharge"] = constructTrigger("Tycoon/Kneader/Level/Recharge") :: TriggerNode,
			},
		},
		["Oven"] = {
			["PetBalanceId"] = constructTrigger("Tycoon/Oven/PetBalanceId") :: TriggerNode,
			["Level"] = {
				["Value"] = constructTrigger("Tycoon/Oven/Level/Value") :: TriggerNode,
				["Recharge"] = constructTrigger("Tycoon/Oven/Level/Recharge") :: TriggerNode,
			},
		},
		["Rack"] = {
			["Level"] = {
				["Storage"] = constructTrigger("Tycoon/Rack/Level/Storage") :: TriggerNode,
			},
		},
	},
	["Chat"] = {
		["LastMessage"] = constructTrigger("Chat/LastMessage") :: TriggerNode,
		["Count"] = constructTrigger("Chat/Count") :: TriggerNode,
	},
	["Population"] = {
		["Total"] = constructTrigger("Population/Total") :: TriggerNode,
		["Team"] = constructTrigger("Population/Team") :: TriggerNode,
		["PeakFriends"] = constructTrigger("Population/PeakFriends") :: TriggerNode,
		["Friends"] = constructTrigger("Population/Friends") :: TriggerNode,
		["SpeakingDistance"] = constructTrigger("Population/SpeakingDistance") :: TriggerNode,
	},
	["Performance"] = {
		["Server"] = {
			["EventsPerMinute"] = constructTrigger("Performance/Server/EventsPerMinute") :: TriggerNode,
			["Ping"] = constructTrigger("Performance/Server/Ping") :: TriggerNode,
			["ServerTime"] = constructTrigger("Performance/Server/ServerTime") :: TriggerNode,
			["HeartRate"] = constructTrigger("Performance/Server/HeartRate") :: TriggerNode,
			["Instances"] = constructTrigger("Performance/Server/Instances") :: TriggerNode,
			["MovingParts"] = constructTrigger("Performance/Server/MovingParts") :: TriggerNode,
			["Network"] = {
				["Data"] = {
					["Send"] = constructTrigger("Performance/Server/Network/Data/Send") :: TriggerNode,
					["Receive"] = constructTrigger("Performance/Server/Network/Data/Receive") :: TriggerNode,
				},
				["Physics"] = {
					["Send"] = constructTrigger("Performance/Server/Network/Physics/Send") :: TriggerNode,
					["Receive"] = constructTrigger("Performance/Server/Network/Physics/Receive") :: TriggerNode,
				},
				["Memory"] = {
					["Internal"] = constructTrigger("Performance/Server/Network/Memory/Internal") :: TriggerNode,
					["HttpCache"] = constructTrigger("Performance/Server/Network/Memory/HttpCache") :: TriggerNode,
					["Instances"] = constructTrigger("Performance/Server/Network/Memory/Instances") :: TriggerNode,
					["Signals"] = constructTrigger("Performance/Server/Network/Memory/Signals") :: TriggerNode,
					["LuaHeap"] = constructTrigger("Performance/Server/Network/Memory/LuaHeap") :: TriggerNode,
					["Script"] = constructTrigger("Performance/Server/Network/Memory/Script") :: TriggerNode,
					["PhysicsCollision"] = constructTrigger("Performance/Server/Network/Memory/PhysicsCollision") :: TriggerNode,
					["PhysicsParts"] = constructTrigger("Performance/Server/Network/Memory/PhysicsParts") :: TriggerNode,
					["CSG"] = constructTrigger("Performance/Server/Network/Memory/CSG") :: TriggerNode,
					["Particle"] = constructTrigger("Performance/Server/Network/Memory/Particle") :: TriggerNode,
					["Part"] = constructTrigger("Performance/Server/Network/Memory/Part") :: TriggerNode,
					["MeshPart"] = constructTrigger("Performance/Server/Network/Memory/MeshPart") :: TriggerNode,
					["SpatialHash"] = constructTrigger("Performance/Server/Network/Memory/SpatialHash") :: TriggerNode,
					["TerrainGraphics"] = constructTrigger("Performance/Server/Network/Memory/TerrainGraphics") :: TriggerNode,
					["Textures"] = constructTrigger("Performance/Server/Network/Memory/Textures") :: TriggerNode,
					["CharacterTextures"] = constructTrigger("Performance/Server/Network/Memory/CharacterTextures") :: TriggerNode,
					["SoundsData"] = constructTrigger("Performance/Server/Network/Memory/SoundsData") :: TriggerNode,
					["SoundsStreaming"] = constructTrigger("Performance/Server/Network/Memory/SoundsStreaming") :: TriggerNode,
					["TerrainVoxels"] = constructTrigger("Performance/Server/Network/Memory/TerrainVoxels") :: TriggerNode,
					["Guis"] = constructTrigger("Performance/Server/Network/Memory/Guis") :: TriggerNode,
					["Animations"] = constructTrigger("Performance/Server/Network/Memory/Animations") :: TriggerNode,
					["Pathfinding"] = constructTrigger("Performance/Server/Network/Memory/Pathfinding") :: TriggerNode,
				},
			},
		},
	},
	["Market"] = {
		["Spending"] = {
			["Gamepass"] = constructTrigger("Market/Spending/Gamepass") :: TriggerNode,
			["Product"] = constructTrigger("Market/Spending/Product") :: TriggerNode,
			["Total"] = constructTrigger("Market/Spending/Total") :: TriggerNode,
		},
		["Gamepasses"] = {
			["DoubleBreadValue"] = constructTrigger("Market/Gamepasses/DoubleBreadValue") :: TriggerNode,
			["SuperKneader"] = constructTrigger("Market/Gamepasses/SuperKneader") :: TriggerNode,
			["SuperOven"] = constructTrigger("Market/Gamepasses/SuperOven") :: TriggerNode,
			["SuperWrapper"] = constructTrigger("Market/Gamepasses/SuperWrapper") :: TriggerNode,
			["InfiniteTray"] = constructTrigger("Market/Gamepasses/InfiniteTray") :: TriggerNode,
		},
		["Purchase"] = {
			["Product"] = {
				["Name"] = constructTrigger("Market/Purchase/Product/Name") :: TriggerNode,
				["Price"] = constructTrigger("Market/Purchase/Product/Price") :: TriggerNode,
			},
			["Gamepass"] = {
				["Name"] = constructTrigger("Market/Purchase/Gamepass/Name") :: TriggerNode,
				["Price"] = constructTrigger("Market/Purchase/Gamepass/Price") :: TriggerNode,
			},
		},
	},
	["Groups"] = {
		["NSG"] = constructTrigger("Groups/NSG") :: TriggerNode,
	},
	["Demographics"] = {
		["AccountAge"] = constructTrigger("Demographics/AccountAge") :: TriggerNode,
		["RobloxLangugage"] = constructTrigger("Demographics/RobloxLangugage") :: TriggerNode,
		["SystemLanguage"] = constructTrigger("Demographics/SystemLanguage") :: TriggerNode,
		["Platform"] = {
			["Accelerometer"] = constructTrigger("Demographics/Platform/Accelerometer") :: TriggerNode,
			["Gamepad"] = constructTrigger("Demographics/Platform/Gamepad") :: TriggerNode,
			["Gyroscope"] = constructTrigger("Demographics/Platform/Gyroscope") :: TriggerNode,
			["Keyboard"] = constructTrigger("Demographics/Platform/Keyboard") :: TriggerNode,
			["Mouse"] = constructTrigger("Demographics/Platform/Mouse") :: TriggerNode,
			["Touch"] = constructTrigger("Demographics/Platform/Touch") :: TriggerNode,
			["ScreenSize"] = constructTrigger("Demographics/Platform/ScreenSize") :: TriggerNode,
			["ScreenRatio"] = constructTrigger("Demographics/Platform/ScreenRatio") :: TriggerNode,
		},
	},
}